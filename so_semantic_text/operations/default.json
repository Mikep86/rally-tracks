    {
      "name": "index-append",
      "operation-type": "bulk",
      "indices": "so-semantic-text",
      "bulk-size": {{bulk_size | default(10)}},
      {% if p_use_pipelines %}
      "pipeline": "elser-v2-ingest",
      {% endif %}
      "ingest-percentage": {{ingest_percentage | default(100)}}
    },
    {
      "name": "create-inference-service",
      "operation-type": "raw-request",
      "path": "/_inference/{{p_task_type}}/my-inference-id-model",
      "method": "PUT",
      "body": {
        "service": "{{p_inference_service}}",
        "service_settings": {
          "model_id": "{{p_inference_model_id}}",
          "num_allocations": {{ num_allocations | default(1) | int }},
          "num_threads": {{ num_threads | default(1) | int }}
        },
        "task_settings": {}
      },
      "request-timeout": 30000,
      "include-in-reporting": false
    },
    {
      "name": "delete-inference-service",
      "operation-type": "raw-request",
      "path": "/_inference/sparse_embedding/my-inference-id-model",
      "method": "DELETE",
      "include-in-reporting": false,
      "ignore": 404
    },
    {
      "name": "setup-elser-pipeline",
      "operation-type": "put-pipeline",
      "id": "elser-v2-ingest",
      "body": {
        "description": "Pipes documents to ELSER",
        "processors": [
          {
            "inference": {
              "model_id": "my-inference-id-model",
              "input_output": [
                {
                  "input_field": "title",
                  "output_field": "ml.title_embedding.tokens"
                }
                {% if p_calculate_body_vector %}
                ,
                {
                  "input_field": "body",
                  "output_field": "ml.body_embedding.tokens"
                }
                {% endif %}
              ],
              "ignore_missing": true
            }
          }
        ],
        "on_failure": [
          {
            "set": {
              "field": "_index",
              {% raw %}
              "description": "Record error information",
              "field": "ml.error_information",
              "value": "Processor {{ _ingest.on_failure_processor_type }} with tag {{ _ingest.on_failure_processor_tag }} in pipeline {{ _ingest.on_failure_pipeline }} failed with message {{ _ingest.on_failure_message }}"
              {% endraw %}
            }
          }
        ]
      }
    },
    {
      "name": "delete-elser-pipeline",
      "operation-type": "raw-request",
      "path": "/_ingest/pipeline/elser-v2-ingest",
      "method": "DELETE",
      "include-in-reporting": false,
      "ignore": 404
    },
    {
      "name": "create-transform-group-by-user",
      "operation-type": "create-transform",
      "transform-id": "transform-group-by-user",
      "body": {
        "settings": {
          "max_page_search_size": {{max_page_search_size | default(500)}}
        },
        "source": {
          "index": "so"
        },
        "dest": {
          "index": "so-by-user"
        },
        "pivot": {
          "group_by": {
            "user": {
              "terms": {
                "field": "user"
              }
            }
          },
          "aggregations": {
            "questions": {
              "filter": {
                "term": {
                  "type": "question"
                }
              },
              "aggs": {
                "count": {
                  "value_count": {
                    "field": "type"
                  }
                },
                "accepted_answers": {
                  "value_count": {
                    "field": "acceptedAnswerId"
                  }
                }
              }
            },
            "answers": {
              "filter": {
                "term": {
                  "type": "answer"
                }
              },
              "aggs": {
                "count": {
                  "value_count": {
                    "field": "type"
                  }
                },
                "unique_questions": {
                  "cardinality": {
                    "field": "questionId"
                  }
                }
              }
            },
            "answer-question-ratio": {
              "bucket_script": {
                "buckets_path": {
                  "answers": "answers>count",
                  "questions": "questions>count"
                },
                "script": "if (params.answers > 0 && params.questions > 0) { return params.answers / params.questions;} return -1; "
              }
            },
            "last_seen": {
              "max": {
                "field": "creationDate"
              }
            }
          }
        }
      }
    },
    {
      "name": "create-transform-group-by-hour",
      "operation-type": "create-transform",
      "transform-id": "transform-group-by-hour",
      "body": {
        "settings": {
          "max_page_search_size": {{max_page_search_size | default(500)}}
        },
        "source": {
          "index": "so"
        },
        "dest": {
          "index": "so-by-hour"
        },
        "pivot": {
          "group_by": {
            "timestamp": {
              "date_histogram": {
                "field": "creationDate",
                "fixed_interval": "1h"
              }
            }
          },
          "aggregations": {
            "count": {
              "value_count": {
                "field": "creationDate"
              }
            },
            "questions": {
              "filter": {
                "term": {
                  "type": "question"
                }
              }
            },
            "answers": {
              "filter": {
                "term": {
                  "type": "answer"
                }
              }
            },
            "active_users": {
              "cardinality": {
                "field": "user"
              }
            }
          }
        }
      }
    },
    {
      "name": "frequent_items_all_100",
      "operation-type": "search",
      "index": "so",
      "body": {
        "query": {
          "bool": {
            "must": [
              {
                "exists": {
                  "field": "tags"
                }
              }
            ],
            "filter": [
              {
                "script": {
                  "script": "doc['tags'].length > 2"
                }
              },
              {
                "term": {
                  "type": "question"
                }
              }
            ]
          }
        },
        "size": 0,
        "aggs": {
          "fi": {
            "frequent_item_sets": {
              "minimum_set_size": 2,
              "minimum_support": 0.01,
              "size": 100,
              "fields": [
                {
                  "field": "tags"
                }
              ]
            }
          }
        }
      }
    },
    {
      "name": "frequent_items_python_10",
      "operation-type": "search",
      "index": "so",
      "body": {
        "query": {
          "bool": {
            "must": [
              {
                "exists": {
                  "field": "tags"
                }
              },
              {
                "term": {
                  "tags": {
                    "value": "python"
                  }
                }
              }
            ],
            "filter": [{
              "script": {
                "script": "doc['tags'].length > 2"
              }
            },
            {
              "term": {
                "type": "question"
              }
            }
            ]
          }
        },
        "size": 0,
        "aggs": {
          "fi": {
            "frequent_item_sets": {
              "minimum_set_size": 2,
              "minimum_support": 0.01,
              "size": 10,
              "fields": [
                {
                  "field": "tags"
                }
              ]
            }
          }
        }
      }
    },
    {
      "name": "frequent_items_java_1000",
      "operation-type": "search",
      "index": "so",
      "body": {
        "query": {
          "bool": {
            "must": [
              {
                "exists": {
                  "field": "tags"
                }
              }
            ],
            "filter": [
              {
                "script": {
                  "script": "doc['tags'].length > 2"
                }
              },
              {
                "term": {
                  "type": "question"
                }
              }
            ]
          }
        },
        "size": 0,
        "aggs": {
          "fi": {
            "frequent_item_sets": {
              "minimum_set_size": 2,
              "minimum_support": 0.005,
              "size": 1000,
              "fields": [
                {
                  "field": "tags"
                }
              ]
            }
          }
        }
      }
    }
